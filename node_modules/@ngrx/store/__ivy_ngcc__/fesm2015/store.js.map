{"version":3,"file":"store.js","sources":["../src/action_creator.ts","../src/actions_subject.ts","../src/tokens.ts","../src/utils.ts","../src/reducer_manager.ts","../src/scanned_actions_subject.ts","../src/state.ts","../src/store.ts","../src/selector.ts","../src/store_module.ts","../store.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Creator,\n  ActionCreator,\n  TypedAction,\n  FunctionWithParametersType,\n  ParametersType,\n} from './models';\n\n/**\n * Action creators taken from ts-action library and modified a bit to better\n * fit current NgRx usage. Thank you Nicholas Jamieson (@cartant).\n */\nexport function createAction<T extends string>(\n  type: T\n): ActionCreator<T, () => TypedAction<T>>;\nexport function createAction<T extends string, P extends object>(\n  type: T,\n  config: { _as: 'props'; _p: P }\n): ActionCreator<T, (props: P) => P & TypedAction<T>>;\nexport function createAction<T extends string, C extends Creator>(\n  type: T,\n  creator: C\n): FunctionWithParametersType<\n  ParametersType<C>,\n  ReturnType<C> & TypedAction<T>\n> &\n  TypedAction<T>;\nexport function createAction<T extends string>(\n  type: T,\n  config?: { _as: 'props' } | Creator\n): Creator {\n  if (typeof config === 'function') {\n    return defineType(type, (...args: unknown[]) => ({\n      ...config(...args),\n      type,\n    }));\n  }\n  const as = config ? config._as : 'empty';\n  switch (as) {\n    case 'empty':\n      return defineType(type, () => ({ type }));\n    case 'props':\n      return defineType(type, (props: unknown) => ({\n        ...(props as object),\n        type,\n      }));\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\n\nexport function props<P>(): { _as: 'props'; _p: P } {\n  return { _as: 'props', _p: undefined! };\n}\n\nexport function union<\n  C extends { [key: string]: ActionCreator<string, Creator> }\n>(creators: C): ReturnType<C[keyof C]> {\n  return undefined!;\n}\n\nfunction defineType(type: string, creator: Creator): Creator {\n  return Object.defineProperty(creator, 'type', {\n    value: type,\n    writable: false,\n  });\n}\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Action } from './models';\n\nexport const INIT = '@ngrx/store/init' as '@ngrx/store/init';\n\n@Injectable()\nexport class ActionsSubject extends BehaviorSubject<Action>\n  implements OnDestroy {\n  constructor() {\n    super({ type: INIT });\n  }\n\n  next(action: Action): void {\n    if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n\n    super.next(action);\n  }\n\n  complete() {\n    /* noop */\n  }\n\n  ngOnDestroy() {\n    super.complete();\n  }\n}\n\nexport const ACTIONS_SUBJECT_PROVIDERS: Provider[] = [ActionsSubject];\n","import { InjectionToken } from '@angular/core';\n\nexport const _INITIAL_STATE = new InjectionToken(\n  '@ngrx/store Internal Initial State'\n);\nexport const INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nexport const REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory'\n);\nexport const _REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory Provider'\n);\nexport const INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Initial Reducers'\n);\nexport const _INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Initial Reducers'\n);\nexport const META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\nexport const STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nexport const _STORE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Store Reducers'\n);\nexport const _FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers'\n);\n\nexport const _FEATURE_CONFIGS = new InjectionToken(\n  '@ngrx/store Internal Feature Configs'\n);\n\nexport const _STORE_FEATURES = new InjectionToken(\n  '@ngrx/store Internal Store Features'\n);\n\nexport const _FEATURE_REDUCERS_TOKEN = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers Token'\n);\nexport const FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Feature Reducers'\n);\n","import {\n  Action,\n  ActionReducer,\n  ActionReducerFactory,\n  ActionReducerMap,\n  MetaReducer,\n  InitialState,\n} from './models';\n\nexport function combineReducers<T, V extends Action = Action>(\n  reducers: ActionReducerMap<T, V>,\n  initialState?: Partial<T>\n): ActionReducer<T, V>;\nexport function combineReducers(\n  reducers: any,\n  initialState: any = {}\n): ActionReducer<any, Action> {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: any = {};\n\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState: any = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer: any = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nexport function omit<T extends { [key: string]: any }>(\n  object: T,\n  keyToRemove: keyof T\n): Partial<T> {\n  return Object.keys(object)\n    .filter(key => key !== keyToRemove)\n    .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => D;\nexport function compose<A, B, C, D, E>(\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(\n  f: (i: E) => F,\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => F;\nexport function compose<A = any, F = any>(...functions: any[]): (i: A) => F;\nexport function compose(...functions: any[]) {\n  return function(arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n\nexport function createReducerFactory<T, V extends Action = Action>(\n  reducerFactory: ActionReducerFactory<T, V>,\n  metaReducers?: MetaReducer<T, V>[]\n): ActionReducerFactory<T, V> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    reducerFactory = compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n\n  return (reducers: ActionReducerMap<T, V>, initialState?: InitialState<T>) => {\n    const reducer = reducerFactory(reducers);\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? (initialState as T) : state;\n      return reducer(state, action);\n    };\n  };\n}\n\nexport function createFeatureReducerFactory<T, V extends Action = Action>(\n  metaReducers?: MetaReducer<T, V>[]\n): (reducer: ActionReducer<T, V>, initialState?: T) => ActionReducer<T, V> {\n  const reducerFactory =\n    Array.isArray(metaReducers) && metaReducers.length > 0\n      ? compose<ActionReducer<T, V>>(...metaReducers)\n      : (r: ActionReducer<T, V>) => r;\n\n  return (reducer: ActionReducer<T, V>, initialState?: T) => {\n    reducer = reducerFactory(reducer);\n\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { ActionsSubject } from './actions_subject';\r\nimport {\r\n  Action,\r\n  ActionReducer,\r\n  ActionReducerFactory,\r\n  ActionReducerMap,\r\n  StoreFeature,\r\n} from './models';\r\nimport { INITIAL_REDUCERS, INITIAL_STATE, REDUCER_FACTORY } from './tokens';\r\nimport {\r\n  createFeatureReducerFactory,\r\n  createReducerFactory,\r\n  omit,\r\n} from './utils';\r\n\r\nexport abstract class ReducerObservable extends Observable<\r\n  ActionReducer<any, any>\r\n> {}\r\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\r\nexport const UPDATE = '@ngrx/store/update-reducers' as '@ngrx/store/update-reducers';\r\n\r\n@Injectable()\r\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\r\n  implements OnDestroy {\r\n  constructor(\r\n    private dispatcher: ReducerManagerDispatcher,\r\n    @Inject(INITIAL_STATE) private initialState: any,\r\n    @Inject(INITIAL_REDUCERS) private reducers: ActionReducerMap<any, any>,\r\n    @Inject(REDUCER_FACTORY)\r\n    private reducerFactory: ActionReducerFactory<any, any>\r\n  ) {\r\n    super(reducerFactory(reducers, initialState));\r\n  }\r\n\r\n  addFeature(feature: StoreFeature<any, any>) {\r\n    this.addFeatures([feature]);\r\n  }\r\n\r\n  addFeatures(features: StoreFeature<any, any>[]) {\r\n    const reducers = features.reduce(\r\n      (\r\n        reducerDict,\r\n        { reducers, reducerFactory, metaReducers, initialState, key }\r\n      ) => {\r\n        const reducer =\r\n          typeof reducers === 'function'\r\n            ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\r\n            : createReducerFactory(reducerFactory, metaReducers)(\r\n                reducers,\r\n                initialState\r\n              );\r\n\r\n        reducerDict[key] = reducer;\r\n        return reducerDict;\r\n      },\r\n      {} as { [key: string]: ActionReducer<any, any> }\r\n    );\r\n\r\n    this.addReducers(reducers);\r\n  }\r\n\r\n  removeFeature(feature: StoreFeature<any, any>) {\r\n    this.removeFeatures([feature]);\r\n  }\r\n\r\n  removeFeatures(features: StoreFeature<any, any>[]) {\r\n    this.removeReducers(features.map(p => p.key));\r\n  }\r\n\r\n  addReducer(key: string, reducer: ActionReducer<any, any>) {\r\n    this.addReducers({ [key]: reducer });\r\n  }\r\n\r\n  addReducers(reducers: { [key: string]: ActionReducer<any, any> }) {\r\n    this.reducers = { ...this.reducers, ...reducers };\r\n    this.updateReducers(Object.keys(reducers));\r\n  }\r\n\r\n  removeReducer(featureKey: string) {\r\n    this.removeReducers([featureKey]);\r\n  }\r\n\r\n  removeReducers(featureKeys: string[]) {\r\n    featureKeys.forEach(key => {\r\n      this.reducers = omit(this.reducers, key) /*TODO(#823)*/ as any;\r\n    });\r\n    this.updateReducers(featureKeys);\r\n  }\r\n\r\n  private updateReducers(featureKeys: string[]) {\r\n    this.next(this.reducerFactory(this.reducers, this.initialState));\r\n    this.dispatcher.next(<Action>{\r\n      type: UPDATE,\r\n      features: featureKeys,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.complete();\r\n  }\r\n}\r\n\r\nexport const REDUCER_MANAGER_PROVIDERS: Provider[] = [\r\n  ReducerManager,\r\n  { provide: ReducerObservable, useExisting: ReducerManager },\r\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\r\n];\r\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Action } from './models';\n\n@Injectable()\nexport class ScannedActionsSubject extends Subject<Action>\n  implements OnDestroy {\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  queueScheduler,\n  Subscription,\n} from 'rxjs';\nimport { observeOn, scan, withLatestFrom } from 'rxjs/operators';\n\nimport { ActionsSubject, INIT } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\nimport { INITIAL_STATE } from './tokens';\n\nexport abstract class StateObservable extends Observable<any> {}\n\n@Injectable()\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = INIT;\n\n  private stateSubscription: Subscription;\n\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n    @Inject(INITIAL_STATE) initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = actions$.pipe(\n      observeOn(queueScheduler)\n    );\n    const withLatestReducer$: Observable<\n      [Action, ActionReducer<any, Action>]\n    > = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n\n    const seed: StateActionPair<T> = { state: initialState };\n    const stateAndAction$: Observable<{\n      state: any;\n      action?: Action;\n    }> = withLatestReducer$.pipe(\n      scan<[Action, ActionReducer<T, Action>], StateActionPair<T>>(\n        reduceState,\n        seed\n      )\n    );\n\n    this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n}\n\nexport type StateActionPair<T, V extends Action = Action> = {\n  state: T | undefined;\n  action?: V;\n};\nexport function reduceState<T, V extends Action = Action>(\n  stateActionPair: StateActionPair<T, V> = { state: undefined },\n  [action, reducer]: [V, ActionReducer<T, V>]\n): StateActionPair<T, V> {\n  const { state } = stateActionPair;\n  return { state: reducer(state, action), action };\n}\n\nexport const STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n","import { Injectable, Provider } from '@angular/core';\nimport { Observable, Observer, Operator } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\n\nimport { ActionsSubject } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { ReducerManager } from './reducer_manager';\nimport { StateObservable } from './state';\n\n@Injectable()\nexport class Store<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    state$: StateObservable,\n    private actionsObserver: ActionsSubject,\n    private reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Observable<K>;\n  select<K, Props = any>(\n    mapFn: (state: T, props: Props) => K,\n    props: Props\n  ): Observable<K>;\n  select<a extends keyof T>(key: a): Observable<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(\n    key1: a,\n    key2: b\n  ): Observable<T[a][b]>;\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(\n    key1: a,\n    key2: b,\n    key3: c\n  ): Observable<T[a][b][c]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c]\n  >(key1: a, key2: b, key3: c, key4: d): Observable<T[a][b][c][d]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d]\n  >(key1: a, key2: b, key3: c, key4: d, key5: e): Observable<T[a][b][c][d][e]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e]\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f\n  ): Observable<T[a][b][c][d][e][f]>;\n  /**\n   * This overload is used to support spread operator with\n   * fixed length tuples type in typescript 2.7\n   */\n  select<K = any>(...paths: string[]): Observable<K>;\n  select<Props = any>(\n    pathOrMapFn: ((state: T, props?: Props) => any) | string,\n    ...paths: string[]\n  ): Observable<any> {\n    return select.call(null, pathOrMapFn, ...paths)(this);\n  }\n\n  lift<R>(operator: Operator<T, R>): Store<R> {\n    const store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch<V extends Action = Action>(action: V) {\n    this.actionsObserver.next(action);\n  }\n\n  next(action: Action) {\n    this.actionsObserver.next(action);\n  }\n\n  error(err: any) {\n    this.actionsObserver.error(err);\n  }\n\n  complete() {\n    this.actionsObserver.complete();\n  }\n\n  addReducer<State, Actions extends Action = Action>(\n    key: string,\n    reducer: ActionReducer<State, Actions>\n  ) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n\n  removeReducer<Key extends Extract<keyof T, string>>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\n}\n\nexport const STORE_PROVIDERS: Provider[] = [Store];\n\nexport function select<T, Props, K>(\n  mapFn: (state: T, props: Props) => K,\n  props?: Props\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, a extends keyof T>(\n  key: a,\n  props: null\n): (source$: Observable<T>) => Observable<T[a]>;\nexport function select<T, a extends keyof T, b extends keyof T[a]>(\n  key1: a,\n  key2: b\n): (source$: Observable<T>) => Observable<T[a][b]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b]\n>(\n  key1: a,\n  key2: b,\n  key3: c\n): (source$: Observable<T>) => Observable<T[a][b][c]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d\n): (source$: Observable<T>) => Observable<T[a][b][c][d]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e][f]>;\n/**\n * This overload is used to support spread operator with\n * fixed length tuples type in typescript 2.7\n */\nexport function select<T, Props = any, K = any>(\n  propsOrPath: Props,\n  ...paths: string[]\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, Props, K>(\n  pathOrMapFn: ((state: T, props?: Props) => any) | string,\n  propsOrPath: Props | string,\n  ...paths: string[]\n) {\n  return function selectOperator(source$: Observable<T>): Observable<K> {\n    let mapped$: Observable<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      const pathSlices = [<string>propsOrPath, ...paths].filter(Boolean);\n      mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = source$.pipe(\n        map(source => pathOrMapFn(source, <Props>propsOrPath))\n      );\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n          ` expected 'string' or 'function'`\n      );\n    }\n\n    return mapped$.pipe(distinctUntilChanged());\n  };\n}\n","import { Selector, SelectorWithProps } from './models';\n\nexport type AnyFn = (...args: any[]) => any;\n\nexport type MemoizedProjection = { memoized: AnyFn; reset: () => void };\n\nexport type MemoizeFn = (t: AnyFn) => MemoizedProjection;\n\nexport type ComparatorFn = (a: any, b: any) => boolean;\n\nexport interface MemoizedSelector<State, Result>\n  extends Selector<State, Result> {\n  release(): void;\n  projector: AnyFn;\n}\n\nexport interface MemoizedSelectorWithProps<State, Props, Result>\n  extends SelectorWithProps<State, Props, Result> {\n  release(): void;\n  projector: AnyFn;\n}\n\nexport function isEqualCheck(a: any, b: any): boolean {\n  return a === b;\n}\n\nfunction isArgumentsChanged(\n  args: IArguments,\n  lastArguments: IArguments,\n  comparator: ComparatorFn\n) {\n  for (let i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function resultMemoize(\n  projectionFn: AnyFn,\n  isResultEqual: ComparatorFn\n) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\n\nexport function defaultMemoize(\n  projectionFn: AnyFn,\n  isArgumentsEqual = isEqualCheck,\n  isResultEqual = isEqualCheck\n): MemoizedProjection {\n  let lastArguments: null | IArguments = null;\n  // tslint:disable-next-line:no-any anything could be the result.\n  let lastResult: any = null;\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n\n  // tslint:disable-next-line:no-any anything could be the result.\n  function memoized(): any {\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null, arguments);\n      lastArguments = arguments;\n      return lastResult;\n    }\n\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n\n    lastArguments = arguments;\n\n    const newResult = projectionFn.apply(null, arguments);\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n\n    lastResult = newResult;\n\n    return newResult;\n  }\n\n  return { memoized, reset };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, Result>(\n  selectors: [Selector<State, S1>],\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  selectors: [SelectorWithProps<State, Props, S1>],\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>],\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>\n  ],\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>, Selector<State, S3>],\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  s8: SelectorWithProps<State, Props, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>,\n    Selector<State, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>,\n    SelectorWithProps<State, Props, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\n/**\n * @deprecated\n * Selectors with only a projector function aren't valid anymore and will be removed in version 8.0.0\n *\n * BEFORE:\n *\n * ```ts\n * const getTodosById = createSelector(\n *   (state: TodoAppSchema, id: number) => state.todos.find(p => p.id === id)\n * );\n * ```\n *\n * AFTER:\n *\n * ```ts\n * const getTodosById = createSelector(\n *   (state: TodoAppSchema) => state.todos,\n *   (todos: Todo[], id: number) => todos.find(p => p.id === id)\n * );\n * ```\n */\nexport function createSelector<State, Props, Result>(\n  projector: SelectorWithProps<State, Props, Result>\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector(\n  ...input: any[]\n): Selector<any, any> | SelectorWithProps<any, any, any> {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\n\nexport function defaultStateFn(\n  state: any,\n  selectors: Selector<any, any>[] | SelectorWithProps<any, any, any>[],\n  props: any,\n  memoizedProjector: MemoizedProjection\n): any {\n  if (props === undefined) {\n    const args = (<Selector<any, any>[]>selectors).map(fn => fn(state));\n    return memoizedProjector.memoized.apply(null, args);\n  }\n\n  const args = (<SelectorWithProps<any, any, any>[]>selectors).map(fn =>\n    fn(state, props)\n  );\n  return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n\nexport type SelectorFactoryConfig<T = any, V = any> = {\n  stateFn: (\n    state: T,\n    props: any,\n    selectors: Selector<any, any>[],\n    memoizedProjector: MemoizedProjection\n  ) => V;\n};\n\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => Selector<T, V>;\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => Selector<T, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => SelectorWithProps<T, Props, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => SelectorWithProps<T, Props, V>;\nexport function createSelectorFactory(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<any, any> = {\n    stateFn: defaultStateFn,\n  }\n) {\n  return function(\n    ...input: any[]\n  ): Selector<any, any> | SelectorWithProps<any, any, any> {\n    let args = input;\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    }\n\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(\n      (selector: any) =>\n        selector.release && typeof selector.release === 'function'\n    );\n\n    const memoizedProjector = memoize(function(...selectors: any[]) {\n      return projector.apply(null, selectors);\n    });\n\n    const memoizedState = defaultMemoize(function(state: any, props: any) {\n      // createSelector works directly on state\n      // e.g. createSelector((state, props) => ...)\n      if (selectors.length === 0 && props !== undefined) {\n        return projector.apply(null, [state, props]);\n      }\n\n      return options.stateFn.apply(null, [\n        state,\n        selectors,\n        props,\n        memoizedProjector,\n      ]);\n    });\n\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n\n      memoizedSelectors.forEach(selector => selector.release());\n    }\n\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n    });\n  };\n}\n\nexport function createFeatureSelector<T>(\n  featureName: string\n): MemoizedSelector<object, T>;\nexport function createFeatureSelector<T, V>(\n  featureName: keyof T\n): MemoizedSelector<T, V>;\nexport function createFeatureSelector(\n  featureName: any\n): MemoizedSelector<any, any> {\n  return createSelector(\n    (state: any) => state[featureName],\n    (featureState: any) => featureState\n  );\n}\n","import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n  Injector,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n  MetaReducer,\n} from './models';\nimport { compose, combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  _INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n  _STORE_REDUCERS,\n  FEATURE_REDUCERS,\n  _FEATURE_REDUCERS,\n  _FEATURE_REDUCERS_TOKEN,\n  _STORE_FEATURES,\n  _FEATURE_CONFIGS,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS, Store } from './store';\n\n@NgModule({})\nexport class StoreRootModule {\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject,\n    store: Store<any>\n  ) {}\n}\n\n@NgModule({})\nexport class StoreFeatureModule implements OnDestroy {\n  constructor(\n    @Inject(_STORE_FEATURES) private features: StoreFeature<any, any>[],\n    @Inject(FEATURE_REDUCERS) private featureReducers: ActionReducerMap<any>[],\n    private reducerManager: ReducerManager,\n    root: StoreRootModule\n  ) {\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift();\n      const reducers = featureReducerCollection /*TODO(#823)*/![index];\n\n      return {\n        ...feature,\n        reducers,\n        initialState: _initialStateFactory(feature.initialState),\n      };\n    });\n\n    reducerManager.addFeatures(feats);\n  }\n\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n}\n\nexport type StoreConfig<T, V extends Action = Action> = {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: MetaReducer<T, V>[];\n};\n\n@NgModule({})\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders<StoreRootModule>;\n  static forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders<StoreRootModule> {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: _STORE_REDUCERS,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers,\n        },\n        {\n          provide: META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V> | InjectionToken<ActionReducer<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature(\n    featureName: string,\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>\n      | ActionReducer<any, any>\n      | InjectionToken<ActionReducer<any, any>>,\n    config: StoreConfig<any, any> | InjectionToken<StoreConfig<any, any>> = {}\n  ): ModuleWithProviders<StoreFeatureModule> {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: _FEATURE_CONFIGS,\n          multi: true,\n          useValue: config,\n        },\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: {\n            key: featureName,\n            reducerFactory:\n              !(config instanceof InjectionToken) && config.reducerFactory\n                ? config.reducerFactory\n                : combineReducers,\n            metaReducers:\n              !(config instanceof InjectionToken) && config.metaReducers\n                ? config.metaReducers\n                : [],\n            initialState:\n              !(config instanceof InjectionToken) && config.initialState\n                ? config.initialState\n                : undefined,\n          },\n        },\n        {\n          provide: _STORE_FEATURES,\n          deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n          useFactory: _createFeatureStore,\n        },\n        { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n        {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [\n            Injector,\n            _FEATURE_REDUCERS,\n            [new Inject(_FEATURE_REDUCERS_TOKEN)],\n          ],\n          useFactory: _createFeatureReducers,\n        },\n      ],\n    };\n  }\n}\n\nexport function _createStoreReducers(\n  injector: Injector,\n  reducers: ActionReducerMap<any, any>,\n  tokenReducers: ActionReducerMap<any, any>\n) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n\nexport function _createFeatureStore(\n  injector: Injector,\n  configs: StoreConfig<any, any>[] | InjectionToken<StoreConfig<any, any>>[],\n  featureStores: StoreFeature<any, any>[]\n) {\n  return featureStores.map((feat, index) => {\n    if (configs[index] instanceof InjectionToken) {\n      const conf = injector.get(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory\n          ? conf.reducerFactory\n          : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState,\n      };\n    }\n    return feat;\n  });\n}\n\nexport function _createFeatureReducers(\n  injector: Injector,\n  reducerCollection: ActionReducerMap<any, any>[],\n  tokenReducerCollection: ActionReducerMap<any, any>[]\n) {\n  const reducers = reducerCollection.map((reducer, index) => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n\n  return reducers;\n}\n\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ACTIONS_SUBJECT_PROVIDERS as Éµngrx_modules_store_store_c} from './src/actions_subject';\nexport {StoreFeature as Éµngrx_modules_store_store_a} from './src/models';\nexport {REDUCER_MANAGER_PROVIDERS as Éµngrx_modules_store_store_d} from './src/reducer_manager';\nexport {SCANNED_ACTIONS_SUBJECT_PROVIDERS as Éµngrx_modules_store_store_e} from './src/scanned_actions_subject';\nexport {isEqualCheck as Éµngrx_modules_store_store_f} from './src/selector';\nexport {STATE_PROVIDERS as Éµngrx_modules_store_store_g} from './src/state';\nexport {STORE_PROVIDERS as Éµngrx_modules_store_store_b} from './src/store';\nexport {_createFeatureStore as Éµngrx_modules_store_store_j} from './src/store_module';\nexport {_FEATURE_CONFIGS as Éµngrx_modules_store_store_h,_STORE_FEATURES as Éµngrx_modules_store_store_i} from './src/tokens';"]}