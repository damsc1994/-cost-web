{"version":3,"file":"testing.js","sources":["../testing/src/mock_state.ts","../testing/src/mock_store.ts","../testing/src/mock_reducer_manager.ts","../testing/src/testing.ts","../testing/testing.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AAAI;AAAe;;;AAInB,MAAa,SAAwB,SAAQ,eAAkB;AAC/D,IAAE;AACF,QAAI,KAAK,oBAAI,EAAE,GAAC,CAAC;AACjB,KAAG;AACH;qCALC,UAAU;2FACT;AAAC;AAAmB;;;gDAAoC;AAAC;AAAC;AAAI;AAElD;AAG6F;ACT3G;AAAI;AAAe;AAYnB,MAAa,SAAa,SAAQ,KAAQ;AAC1C;AAAQ;AAAyB;AAG5B;AACD;AAA+B;AAC7B,IAHJ,YACU,MAAoB,EAC5B,eAA+B,EAC/B,cAA8B,EACC,YAAe;AAC/C,QACC,KAAK,CAAC,MAAM,EAAE,eAAe,EAAE,cAAc,CAAC,CAAC;AACnD,QANY,WAAM,GAAN,MAAM,CAAc;AAAC,QAGE,iBAAY,GAAZ,YAAY,CAAG;AAClD,QAEI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACxC,QAAI,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC,YAAY,EAAE,CAAC;AAC1D,KAAG;AACH;AACO;AACL;AAAmB;AAAQ,IAD3B,QAAQ,CAAC,SAAY;AAAI,QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChC,KAAG;AACH;AACO;AACE;AACP,IAFA,UAAU;AACZ;AAEA,KADG;AACH;AACO;AACD;AAAQ,IADZ,aAAa;AACf;AAEA,KADG;AACH;qCA1BC,UAAU;2FACT;AAAC;AAAmB;AACV,YAJH,SAAS;AAAI,YALpB,cAAc;AACd,YACA,cAAc;AACd,4CAYG,MAAM,SAAC,aAAa;AAAQ;;;;;;kCAAE;AAAC;AAAC;AAAI;AAEvB;AAEwB;ACvB1C,MAKa,kBAAmB,SAAQ,eAEvC;AACD,IAAE;AACF,QAAI,KAAK;AAAM;AAGX;AAAY,QAHN,MAAM,SAAS,EAAC,CAAC;AAC3B,KAAG;AACH;8CAPC,UAAU;sHACT;AAAC;AAAmB;;;gDACZ;AAAC;AAAC;AAAI;AAGd;AAGmF;ACXrF;AAAI;AAAe;AAAsB;AAEpC;AAaL,SAAgB,gBAAgB,CAC9B,SAA6B,EAAE;AAC9B,IACD,OAAO;AACT,QAAI,cAAc;AAClB,QAAI,SAAS;AACb,QAAI,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,CAAC,YAAY,EAAE;AAC7D,QAAI,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,SAAS,EAAE;AACrD,QAAI,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,kBAAkB,EAAE;AAC7D,QAAI,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE;AAC3C,KAAG,CAAC;AACJ,CAAC;AACD;AACA;AAAI;AAAkC;AAG5B;AAAI;AChCd;AACA;AACA,GAAG;AACH;AACA;AAC8C","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class MockState<T extends {}> extends BehaviorSubject<T> {\n  constructor() {\n    super(<T>{});\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport {\n  Action,\n  ActionsSubject,\n  INITIAL_STATE,\n  ReducerManager,\n  Store,\n} from '@ngrx/store';\nimport { MockState } from './mock_state';\n\n@Injectable()\nexport class MockStore<T> extends Store<T> {\n  public scannedActions$: Observable<Action>;\n\n  constructor(\n    private state$: MockState<T>,\n    actionsObserver: ActionsSubject,\n    reducerManager: ReducerManager,\n    @Inject(INITIAL_STATE) private initialState: T\n  ) {\n    super(state$, actionsObserver, reducerManager);\n    this.state$.next(this.initialState);\n    this.scannedActions$ = actionsObserver.asObservable();\n  }\n\n  setState(nextState: T): void {\n    this.state$.next(nextState);\n  }\n\n  addReducer() {\n    /* noop */\n  }\n\n  removeReducer() {\n    /* noop */\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActionReducer } from '@ngrx/store';\n\n@Injectable()\nexport class MockReducerManager extends BehaviorSubject<\n  ActionReducer<any, any>\n> {\n  constructor() {\n    super(() => undefined);\n  }\n}\n","import { Provider } from '@angular/core';\nimport { MockState } from './mock_state';\nimport {\n  ActionsSubject,\n  INITIAL_STATE,\n  ReducerManager,\n  StateObservable,\n  Store,\n} from '@ngrx/store';\nimport { MockStore } from './mock_store';\nimport { MockReducerManager } from './mock_reducer_manager';\n\nexport interface MockStoreConfig<T> {\n  initialState?: T;\n}\n\nexport function provideMockStore<T = any>(\n  config: MockStoreConfig<T> = {}\n): Provider[] {\n  return [\n    ActionsSubject,\n    MockState,\n    { provide: INITIAL_STATE, useValue: config.initialState },\n    { provide: StateObservable, useClass: MockState },\n    { provide: ReducerManager, useClass: MockReducerManager },\n    { provide: Store, useClass: MockStore },\n  ];\n}\n\nexport { MockReducerManager } from './mock_reducer_manager';\nexport { MockState } from './mock_state';\nexport { MockStore } from './mock_store';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}